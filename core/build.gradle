plugins {
	id 'org.springframework.boot' version '2.2.5.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
}

group = 'com.project'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'project-report'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'


repositories {
	mavenCentral()
}

dependencies {
	ext {
		dropwizardVersion = '3.1.3'
		curatorVersion = '4.2.0'
		zookeeperVersion = '3.4.14'
		jacksonVersion = '2.9.8'
		springFrameworkVersion = '4.3.23.RELEASE'
		kafkaClientVersion='2.4.0'
	}
	// Override spring-boot BOM versions
	ext['json.version'] = '20180130'
	ext['json-path'] = '2.4.0'
	ext['jsonassert'] = '1.5.0'

	// spring
	compile("org.springframework.boot:spring-boot-starter-web") {
	}
	compile 'org.springframework.cloud:spring-cloud-starter-hystrix:1.4.5.RELEASE'


	compile 'com.google.guava:guava:27.1-jre'
	compile 'org.apache.commons:commons-lang3:3.8.1'

	compile("com.fasterxml.jackson.datatype:jackson-datatype-json-org:$jacksonVersion") {
		exclude module: "json"
	}
	compile "com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion"
	compile "com.fasterxml.jackson.core:jackson-core:$jacksonVersion"
	compile "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
	compile "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:$jacksonVersion"
	compile "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:$jacksonVersion"
	compile "com.fasterxml.jackson.datatype:jackson-datatype-joda:$jacksonVersion"
	compile "com.fasterxml.jackson.module:jackson-module-afterburner:$jacksonVersion"
	compile "com.fasterxml.jackson.module:jackson-module-scala_2.12:$jacksonVersion"
	compile 'org.json:json:20180130'


	// open tracing
	compile 'io.opentracing:opentracing-api:0.31.0'
	compile 'io.opentracing:opentracing-util:0.31.0'

	compile "org.apache.kafka:kafka-clients:$kafkaClientVersion"
	compile("org.apache.kafka:kafka_2.12:$kafkaClientVersion") {
		exclude module: "zookeeper"
	}
	compile("org.apache.curator:curator-recipes:$curatorVersion") {
		exclude module: "zookeeper"
	}
	compile "org.apache.zookeeper:zookeeper:$zookeeperVersion"

	compile 'org.echocat.jomon:runtime:1.6.3'

	compile "io.dropwizard.metrics:metrics-core:$dropwizardVersion"

	compile "io.dropwizard.metrics:metrics-servlets:$dropwizardVersion"
	compile "io.dropwizard.metrics:metrics-jvm:$dropwizardVersion"

	compile "org.springframework.boot:spring-boot-starter-jdbc"
	compile 'org.postgresql:postgresql:42.2.5'

//	compile('com.github.everit-org.json-schema:org.everit.json.schema:1.8.0') {
//		exclude module: "json"
//	}

	// tests
	testCompile 'org.hamcrest:hamcrest-all:1.3'
	testCompile('org.junit.jupiter:junit-jupiter-api:5.5.2') {
		exclude module: "hamcrest-core"
	}
	testCompile "org.springframework:spring-test"
	testCompile 'org.springframework.boot:spring-boot-test'
	testCompile 'org.springframework.boot:spring-boot-starter-test'

	implementation 'io.projectreactor:reactor-core:3.3.3.RELEASE'
	implementation 'org.slf4j:slf4j-api:1.7.30'
	implementation 'com.github.ben-manes.caffeine:caffeine:2.6.2'


	testImplementation 'junit:junit:4.13'
	testImplementation 'org.assertj:assertj-core:3.15.0'
	testImplementation 'org.awaitility:awaitility:4.0.2'
	testImplementation 'io.projectreactor:reactor-test:3.3.3.RELEASE'
	testImplementation 'com.devskiller:jfairy:0.6.3'
	testImplementation 'org.mockito:mockito-core:3.3.0'
//	testCompile project(path: ':core-common', configuration: 'testOutput')
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
	implementation 'org.testcontainers:testcontainers:1.13.0'
	implementation 'com.rometools:rome-opml:1.12.2'
	implementation 'com.google.guava:guava:28.2-jre'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}
// end::dependencies[]

test {
	useJUnitPlatform()
}
